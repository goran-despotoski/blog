version: '3'
services:

    #PHP Service
    app:
        user: $DOCKER_USER
        build:
            context: .
            target: dev
            dockerfile: .docker/app/Dockerfile
            args:
                GITHUB_AUTH_TOKEN: ${GITHUB_AUTH_TOKEN}
        image: warranty
        volumes:
            - .:/var/www/
#            - ~/.ssh:/root/.ssh
            - /etc/passwd:/etc/passwd:ro
            - /etc/group:/etc/group:ro
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
            OPCACHE_ENABLED: 0
        working_dir: /var/www
        depends_on:
            - db
            - redis
        networks:
            - internal
    web:
        build:
            context: ./
            dockerfile: ./.docker/web/Dockerfile
        working_dir: /var/www
        volumes:
            - .:/var/www/
            - ./.docker/web/default.conf:/etc/nginx/conf.d/default.conf
#        ports:
#            - "8802:80"
        depends_on:
            - app
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.blog.rule=Host(`blog.localhost`)"
            - "traefik.http.routers.blog.entrypoints=web"
            - "traefik.docker.network=projects_development-net"

        networks:
            - internal
            - projects_development-net
    redis:
        image: redis
        networks:
            - internal

    #PostgreSQL Service
    db:
        image: postgres:11
        restart: unless-stopped
        tty: true
        ports:
            - "5436:5432"
        volumes:
            - db_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: blog
            POSTGRES_USER: blog
            POSTGRES_PASSWORD: mypassword
        networks:
            - internal

    dbtesting:
        image: postgres:11
        restart: unless-stopped
        tty: true
        volumes:
            - dbtest_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: blog_test
            POSTGRES_USER: blog_test
            POSTGRES_PASSWORD: blog_test
        networks:
            - internal
volumes:
    db_data:
    dbtest_data:
    app_cache:


#Docker Networks
networks:
    internal:
        external: false
    projects_development-net:
        external: true
